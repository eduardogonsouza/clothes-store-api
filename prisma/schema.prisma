// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model clothingBrand {
  id      Int      @id @default(autoincrement())
  name    String   @db.VarChar(30)
  clothes clothe[]

  @@map("clothingBrands")
}

model clothe {
  id              Int           @id @default(autoincrement())
  name            String        @db.VarChar(100)
  price           Decimal       @db.Decimal(10, 2)
  description     String        @db.VarChar(255)
  size            String        @db.VarChar(50)
  highlight       Boolean       @default(true)
  photo           String        @db.VarChar(500)
  clothingBrand   clothingBrand @relation(fields: [clothingBrandId], references: [id])
  clothingBrandId Int
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  ratings         Rating[]
  comments        Comment[]

  @@map("clothes")
}

model User {
  id           String    @id @default(uuid()) @db.VarChar(36)
  email        String    @unique
  password     String
  name         String
  recoveryCode String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  ratings      Rating[]
  comments     Comment[]

  @@map("users")
}

model Rating {
  id        Int      @id @default(autoincrement())
  score     Int
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.VarChar(36)
  clothe    clothe   @relation(fields: [clotheId], references: [id])
  clotheId  Int
  createdAt DateTime @default(now())

  @@map("ratings")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.VarChar(36)
  clothe    clothe   @relation(fields: [clotheId], references: [id])
  clotheId  Int
  createdAt DateTime @default(now())

  @@map("comments")
}

model Admin {
  id       Int    @id @default(autoincrement())
  name     String @db.VarChar(255)
  password String @db.VarChar(255)
  email    String @unique @db.VarChar(255)

  @@map("admins")
}
